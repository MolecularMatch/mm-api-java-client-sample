<project name="mm-api-java-client-sample" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib"   location="lib"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac
            srcdir="${src}"
            destdir="${build}"
            debug="true"
            deprecation="false"
            verbose="false"
            >

            <classpath>
                <fileset dir="${lib}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the mm-api-java-client-sample-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/mm-api-java-client-sample.jar" basedir="${build}">
        <manifest>
            <attribute name="Main-Class" value="com.molecularmatch.api.SampleClient"/>
        </manifest>
    </jar>
  </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="run" depends="dist" description="run the sample">
    <java jar="dist/lib/mm-api-java-client-sample.jar"
        fork="true"
        failonerror="true"
        >
        <classpath>
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </classpath>
    </java>
  </target>
</project>